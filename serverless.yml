# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: yasardesigns
# "service" is the name of this project. This will also be added to your AWS resource names.
service: auth-service

provider:
  name: aws
  runtime: nodejs20.x
  region: 'us-east-1'
  memorySize: 128

functions:
  auth:
    handler: handlers/auth.handler
    cors: true
  public:
    handler: handlers/public.handler
    events:
      - http:
          path: public
          method: POST
          cors: true
  private:
    handler: handlers/private.handler
    events:
      - http:
          path: private
          method: POST
          authorizer: auth
          cors: true
resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
custom:
  bundle:
    linting: false
